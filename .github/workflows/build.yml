on:
  watch:
    types: started
  push:
    tags: 
      - "v*"

name: release-build
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Golang
        uses: actions/setup-go@v2
        with: 
         go-version: 1.15.x

      - name: Setup xcaddy
        run: |
          wget https://raw.githubusercontent.com/charlieethan/naive-build/master/src/xcaddy.sh && chmod +x xcaddy.sh && ./xcaddy.sh
          git clone -b naive https://github.com/klzgrad/forwardproxy

      - name: Create Release
        id: create_release
        uses: monkeyWie/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Build linux-386
        env:
          GOOS: linux
          GOARCH: 386
        run: |
          ./xcaddy build --output $PWD/caddy-linux-386 HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-386
      - name: Release linux-386
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-386
          asset_name: caddy-linux-386
          asset_content_type: application/zip

      - name: Build linux-amd64
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          ./xcaddy build --output $PWD/caddy-linux-amd64 HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-amd64
      - name: Release linux-amd64
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-amd64
          asset_name: caddy-linux-amd64
          asset_content_type: application/zip

      - name: Build linux-arm32-v6
        env:
          GOOS: linux
          GOARCH: arm
          GOARM: 6
        run: |
          ./xcaddy build --output $PWD/caddy-linux-arm32-v6 HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-arm32-v6
      - name: Release linux-arm32-v6
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-arm32-v6
          asset_name: caddy-linux-arm32-v6
          asset_content_type: application/zip

      - name: Build linux-arm32-v7
        env:
          GOOS: linux
          GOARCH: arm
          GOARM: 7
        run: |
          ./xcaddy build --output $PWD/caddy-linux-arm32-v7 HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-arm32-v7
      - name: Release linux-arm32-v7
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-arm32-v7
          asset_name: caddy-linux-arm32-v7
          asset_content_type: application/zip

      - name: Build linux-arm64
        env:
          GOOS: linux
          GOARCH: arm64
        run: |
          ./xcaddy build --output $PWD/caddy-linux-arm64 HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-arm64
      - name: Release linux-arm64
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-arm64
          asset_name: caddy-linux-arm64
          asset_content_type: application/zip

      - name: Build linux-ppc64le
        env:
          GOOS: linux
          GOARCH: ppc64le
        run: |
          ./xcaddy build --output $PWD/caddy-linux-ppc64le HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-ppc64le
      - name: Release linux-ppc64le
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-ppc64le
          asset_name: caddy-linux-ppc64le
          asset_content_type: application/zip

      - name: Build linux-s390x
        env:
          GOOS: linux
          GOARCH: s390x
        run: |
         ./xcaddy build --output $PWD/caddy-linux-s390x HEAD --with github.com/caddyserver/forwardproxy=$PWD/forwardproxy
          chmod +x caddy-linux-s390x
      - name: Release linux-s390x
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-linux-s390x
          asset_name: caddy-linux-s390x
          asset_content_type: application/zip

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Gain Dockerfile
        run: |
          wget -O Dockerfile https://raw.githubusercontent.com/charlieethan/naive-build/master/src/Dockerfile
          wget -O config.json https://raw.githubusercontent.com/charlieethan/naive-build/master/src/config.json
          wget -O naive.sh https://raw.githubusercontent.com/charlieethan/naive-build/master/src/naive.sh
      
      - name: Build and push
        run: |
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/naiveproxy:latest" \
          --file Dockerfile .
